# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import house_pb2 as house__pb2


class HouseStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AccessibleDevices = channel.unary_unary(
                '/House/AccessibleDevices',
                request_serializer=house__pb2.Empty.SerializeToString,
                response_deserializer=house__pb2.ListAllDevices.FromString,
                )
        self.GetDeviceWithID = channel.unary_unary(
                '/House/GetDeviceWithID',
                request_serializer=house__pb2.SearchForDevice.SerializeToString,
                response_deserializer=house__pb2.Device.FromString,
                )
        self.GetDeviceTemperatureInfo = channel.unary_unary(
                '/House/GetDeviceTemperatureInfo',
                request_serializer=house__pb2.Device.SerializeToString,
                response_deserializer=house__pb2.TemperatureDetails.FromString,
                )
        self.CheckFridgeTimer = channel.unary_unary(
                '/House/CheckFridgeTimer',
                request_serializer=house__pb2.SearchForDevice.SerializeToString,
                response_deserializer=house__pb2.Time.FromString,
                )
        self.AddDevice = channel.unary_unary(
                '/House/AddDevice',
                request_serializer=house__pb2.Device.SerializeToString,
                response_deserializer=house__pb2.ResponseCall.FromString,
                )
        self.OverrideDevice = channel.unary_unary(
                '/House/OverrideDevice',
                request_serializer=house__pb2.Device.SerializeToString,
                response_deserializer=house__pb2.ResponseCall.FromString,
                )
        self.RemoveDevice = channel.unary_unary(
                '/House/RemoveDevice',
                request_serializer=house__pb2.Device.SerializeToString,
                response_deserializer=house__pb2.ResponseCall.FromString,
                )
        self.SwitchTurnedOnForDevice = channel.unary_unary(
                '/House/SwitchTurnedOnForDevice',
                request_serializer=house__pb2.Device.SerializeToString,
                response_deserializer=house__pb2.ResponseCall.FromString,
                )
        self.ChangeFurnaceMode = channel.unary_unary(
                '/House/ChangeFurnaceMode',
                request_serializer=house__pb2.SearchForDevice.SerializeToString,
                response_deserializer=house__pb2.ResponseCall.FromString,
                )
        self.ChangeHeaterParameters = channel.unary_unary(
                '/House/ChangeHeaterParameters',
                request_serializer=house__pb2.SearchForDevice.SerializeToString,
                response_deserializer=house__pb2.ResponseCall.FromString,
                )
        self.SwitchACDisplay = channel.unary_unary(
                '/House/SwitchACDisplay',
                request_serializer=house__pb2.SearchForDevice.SerializeToString,
                response_deserializer=house__pb2.ResponseCall.FromString,
                )


class HouseServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AccessibleDevices(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDeviceWithID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDeviceTemperatureInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckFridgeTimer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddDevice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OverrideDevice(self, request, context):
        """new
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveDevice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SwitchTurnedOnForDevice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangeFurnaceMode(self, request, context):
        """new from here
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangeHeaterParameters(self, request, context):
        """new
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SwitchACDisplay(self, request, context):
        """new
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_HouseServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AccessibleDevices': grpc.unary_unary_rpc_method_handler(
                    servicer.AccessibleDevices,
                    request_deserializer=house__pb2.Empty.FromString,
                    response_serializer=house__pb2.ListAllDevices.SerializeToString,
            ),
            'GetDeviceWithID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDeviceWithID,
                    request_deserializer=house__pb2.SearchForDevice.FromString,
                    response_serializer=house__pb2.Device.SerializeToString,
            ),
            'GetDeviceTemperatureInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDeviceTemperatureInfo,
                    request_deserializer=house__pb2.Device.FromString,
                    response_serializer=house__pb2.TemperatureDetails.SerializeToString,
            ),
            'CheckFridgeTimer': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckFridgeTimer,
                    request_deserializer=house__pb2.SearchForDevice.FromString,
                    response_serializer=house__pb2.Time.SerializeToString,
            ),
            'AddDevice': grpc.unary_unary_rpc_method_handler(
                    servicer.AddDevice,
                    request_deserializer=house__pb2.Device.FromString,
                    response_serializer=house__pb2.ResponseCall.SerializeToString,
            ),
            'OverrideDevice': grpc.unary_unary_rpc_method_handler(
                    servicer.OverrideDevice,
                    request_deserializer=house__pb2.Device.FromString,
                    response_serializer=house__pb2.ResponseCall.SerializeToString,
            ),
            'RemoveDevice': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveDevice,
                    request_deserializer=house__pb2.Device.FromString,
                    response_serializer=house__pb2.ResponseCall.SerializeToString,
            ),
            'SwitchTurnedOnForDevice': grpc.unary_unary_rpc_method_handler(
                    servicer.SwitchTurnedOnForDevice,
                    request_deserializer=house__pb2.Device.FromString,
                    response_serializer=house__pb2.ResponseCall.SerializeToString,
            ),
            'ChangeFurnaceMode': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangeFurnaceMode,
                    request_deserializer=house__pb2.SearchForDevice.FromString,
                    response_serializer=house__pb2.ResponseCall.SerializeToString,
            ),
            'ChangeHeaterParameters': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangeHeaterParameters,
                    request_deserializer=house__pb2.SearchForDevice.FromString,
                    response_serializer=house__pb2.ResponseCall.SerializeToString,
            ),
            'SwitchACDisplay': grpc.unary_unary_rpc_method_handler(
                    servicer.SwitchACDisplay,
                    request_deserializer=house__pb2.SearchForDevice.FromString,
                    response_serializer=house__pb2.ResponseCall.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'House', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class House(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AccessibleDevices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/House/AccessibleDevices',
            house__pb2.Empty.SerializeToString,
            house__pb2.ListAllDevices.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDeviceWithID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/House/GetDeviceWithID',
            house__pb2.SearchForDevice.SerializeToString,
            house__pb2.Device.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDeviceTemperatureInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/House/GetDeviceTemperatureInfo',
            house__pb2.Device.SerializeToString,
            house__pb2.TemperatureDetails.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckFridgeTimer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/House/CheckFridgeTimer',
            house__pb2.SearchForDevice.SerializeToString,
            house__pb2.Time.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddDevice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/House/AddDevice',
            house__pb2.Device.SerializeToString,
            house__pb2.ResponseCall.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OverrideDevice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/House/OverrideDevice',
            house__pb2.Device.SerializeToString,
            house__pb2.ResponseCall.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveDevice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/House/RemoveDevice',
            house__pb2.Device.SerializeToString,
            house__pb2.ResponseCall.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SwitchTurnedOnForDevice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/House/SwitchTurnedOnForDevice',
            house__pb2.Device.SerializeToString,
            house__pb2.ResponseCall.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChangeFurnaceMode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/House/ChangeFurnaceMode',
            house__pb2.SearchForDevice.SerializeToString,
            house__pb2.ResponseCall.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChangeHeaterParameters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/House/ChangeHeaterParameters',
            house__pb2.SearchForDevice.SerializeToString,
            house__pb2.ResponseCall.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SwitchACDisplay(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/House/SwitchACDisplay',
            house__pb2.SearchForDevice.SerializeToString,
            house__pb2.ResponseCall.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
